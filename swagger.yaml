

tags:
- name: auth
  description: Authentication API
- name: users
  description: users API
- name: questions
  description: questions API

paths:

# Login
  /auth/login:
    post:
      tags:
      - auth
      summary: Authenticate User
      parameters:
      - name: body
        in: body
        description: login Data
        required: true
        schema:
          $ref: '#/definitions/userLogin'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'  

  # sign up
  /auth/signup:
    post:
      tags:
      - auth
      summary: Create Account
      parameters:
      - name: body
        in: body
        description: login Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error' 

  /auth/logout:
    post:
      tags:
      - auth
      summary: Logout user session
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'        
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
          
# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] questions
  /questions:
    get:
      tags:
      - questions
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# post questions 
    post:
      tags:
      - questions
      summary: Create question
      parameters:
      - name: body
        in: body
        description: question Data
        required: true
        schema:
          $ref: '#/definitions/questions'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error' 

# [GET] questions/id
  /questions/{id}:
    get:
      tags:
      - questions
      summary: Find Questions By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] questions/id
    put:
      tags:
      - questions
      summary: Update Question By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/questions'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] questions/id
    delete:
      tags:
      - questions
      summary: Delete Question By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'  
            

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
        - username
    properties:
      email:
        type: string
        description: user Email
      username:
        type: string
        description: user Username
      password:
        type: string
        description: user Password
      firstName:
        type: string
        description: user First name 
      lastName:
        type: string
        description: user Last name
    
  userLogin:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user password

  questions:
    type: object
    required:
        - question
        - userId
    properties:
      question:
        type: string
        description: question Question
      upVote:
        type: integer
        description: user upVote
      downVote:
        type: integer
        description: user downVote
      userId:
        type: integer
        description: user userID 

schemes:
 - https
 - http





